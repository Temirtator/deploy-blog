{"version":3,"file":"static/webpack/static/development/pages/index.js.cb35c49ef9fdecd0b06d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Head from 'next/head'\nimport Layout, { siteTitle } from '../components/layout/layout'\nimport utilStyles from '../styles/utils.module.css'\nimport tabStyles from '../styles/tab.module.css'\nimport Link from 'next/link'\nimport { getSortedPostsData } from '../lib/posts'\nimport Date from '../components/Date'\nimport { useEffect, useState } from 'react'\nimport { otherCategoryPostsDirectory, jsCategoryPostsDirectory, techCategoryPostsDirectory } from '../lib/constants'\n\nexport default function Home({otherPosts, jsPosts, techPosts, theme}) {\n  const [tab, setTab] = useState([\n    {\n      open: true, name: \"#js\",\n    },\n    // {\n    //   open: false, name: \"#tech\"\n    // },\n    {\n      open: false, name: \"#others\"\n    } \n  ]);\n\n  const selectTab = (tabProp) => {\n    let newTab = [...tab];\n    for (let i = 0; i < newTab.length; i++) {\n      if (tabProp.name == newTab[i].name) {\n        newTab[i].open = true;\n      } else {\n        newTab[i].open = false;\n      }\n    }\n    setTab(newTab);\n  };\n  \n  const handleClick = (tabProp) => {\n    if (!tabProp.open) {\n      selectTab(tabProp);\n      localStorage.setItem('category', tabProp.name);\n    }\n  };\n\n  useEffect(() => {\n    const category = localStorage.getItem('category')\n    if (category) {\n      selectTab({ open: false, name: category });\n    } else {\n      localStorage.setItem('category', tab[0].name);\n    }\n  }, [])\n\n  return (\n    <Layout home theme={theme}>\n      <Head>\n        <title>{siteTitle}</title>\n      </Head>\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <div className={tabStyles.header}>\n          {\n            tab.map((tabProp, index) => (\n              <h2 key={index} className={`${utilStyles.headingLg} ${theme && utilStyles.whiteText} ${index != 0 && utilStyles.ml8}`}>\n                <a onClick={() => handleClick(tabProp)} \n                  className={`${theme ? 'dark' : null} ${tabStyles.tab} ${tabProp.open && tabStyles.selected}`}>\n                  {tabProp.name}\n                </a>\n              </h2>\n            ))\n          }\n        </div>\n\n        \n        {\n          tab[0].open &&\n          <ul className={utilStyles.list}>\n            {jsPosts.map(({ id, date, title }, index) => (\n              <li key={index} className={utilStyles.listItem} key={id}>\n                <Link href=\"/posts/js/[id]\" as={`/posts/js/${id}`}>\n                  <a className={theme ? 'dark' : null}>{title}</a>\n                </Link>\n                <br />\n                <small className={utilStyles.lightText}>\n                  <Date dateString={date} />\n                </small>\n              </li>\n            ))}\n          </ul>\n        }\n\n        {/* {\n          tab[1].open &&\n          <ul className={utilStyles.list}>\n            {techPosts.map(({ id, date, title }, index) => (\n              <li key={index} className={utilStyles.listItem} key={id}>\n                <Link href=\"/posts/tech/[id]\" as={`/posts/tech/${id}`}>\n                  <a className={theme ? 'dark' : null}>{title}</a>\n                </Link>\n                <br />\n                <small className={utilStyles.lightText}>\n                  <Date dateString={date} />\n                </small>\n              </li>\n            ))}\n          </ul>\n        } */}\n\n        {\n          tab[2].open &&\n          <ul className={utilStyles.list}>\n            {otherPosts.map(({ id, date, title }, index) => (\n              <li key={index} className={utilStyles.listItem} key={id}>\n                <Link href=\"/posts/others/[id]\" as={`/posts/others/${id}`}>\n                  <a className={theme ? 'dark' : null}>{title}</a>\n                </Link>\n                <br />\n                <small className={utilStyles.lightText}>\n                  <Date dateString={date} />\n                </small>\n              </li>\n            ))}\n          </ul>\n        }\n\n        \n      </section>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const otherPosts = getSortedPostsData(otherCategoryPostsDirectory)\n  const jsPosts = getSortedPostsData(jsCategoryPostsDirectory)\n  const techPosts = getSortedPostsData(techCategoryPostsDirectory)\n  return {\n    props: {\n      otherPosts, jsPosts, techPosts\n    }\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAAA;AADA;AARA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAkBA;;;;A","sourceRoot":""}